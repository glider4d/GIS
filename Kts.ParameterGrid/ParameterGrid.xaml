<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pg="clr-namespace:Kts.ParameterGrid"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d"
    x:Class="Kts.ParameterGrid.ParameterGrid"
    x:Name="parameterGrid"
    UseLayoutRounding="True">
    <UserControl.Resources>
        <!-- Конвертеры -->
        <pg:DepthLevelToMarginConverter
            x:Key="DepthLevelToMarginConverter"
            InitialOffset="25" />
        <pg:DoubleToDataGridLengthConverter
            x:Key="DoubleToDataGridLengthConverter" />
        <pg:ObjectCountToVisibilityConverter
            x:Key="ObjectCountToVisibilityConverter" />
        <pg:StringToNotEmptyConverter
            x:Key="StringToNotEmptyConverter"
            DefaultValue="Значение не задано" />
        <!-- Контекстное меню для копирования -->
        <ContextMenu
            x:Key="CopyContextMenu"
            DataContext="{Binding}">
            <MenuItem
                Header="Копировать"
                Tag="{Binding DisplayedValue}"
                Click="MenuItem_Click" />
        </ContextMenu>
        <!-- Стиль расширителя -->
        <Style
            x:Key="ExpanderStyle"
            TargetType="{x:Type Expander}">
            <EventSetter
                Event="Collapsed"
                Handler="Expander_Collapsed" />
            <EventSetter
                Event="Expanded"
                Handler="Expander_Expanded" />
        </Style>
        <!-- Стиль расширяемой сетки -->
        <Style
            x:Key="CollapsibleGrid"
            TargetType="{x:Type Grid}">
            <EventSetter
                Event="MouseLeftButtonDown"
                Handler="Grid_MouseLeftButtonDown" />
        </Style>
        <!-- Стиль изображения отключенной кнопки -->
        <Style
            x:Key="GrayableImage"
            TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger
                    Property="IsEnabled"
                    Value="False">
                    <Setter
                        Property="Opacity"
                        Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Шаблон ячейки заголовка параметра -->
        <DataTemplate
            x:Key="headerCellDataTemplate">
            <ContentControl>
                <ContentControl.Style>
                    <Style
                        TargetType="{x:Type ContentControl}">
                        <Setter
                            Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid
                                        Margin="{Binding Path=DepthLevel, Converter={StaticResource DepthLevelToMarginConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Expander
                                            Style="{StaticResource ExpanderStyle}"
                                            Visibility="{Binding Path=Children.Count, Converter={StaticResource ObjectCountToVisibilityConverter}}" />
                                        <Grid
                                            Grid.Column="1"
                                            Style="{StaticResource CollapsibleGrid}">
                                            <TextBlock
                                                FontStyle="{Binding HeaderFontStyle}"
                                                FontWeight="{Binding HeaderFontWeight}"
                                                Foreground="{Binding HeaderBrush}"
                                                Text="{Binding Header}"
                                                ToolTip="{Binding Path=Header, Converter={StaticResource StringToNotEmptyConverter}}"
                                                VerticalAlignment="Center" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </DataTemplate>
        <!-- Шаблон ячейки значения параметра -->
        <DataTemplate
            x:Key="valueCellDataTemplate">
            <ContentControl>
                <ContentControl.Style>
                    <Style
                        TargetType="{x:Type ContentControl}">
                        <Setter
                            Property="ContextMenu"
                            Value="{StaticResource CopyContextMenu}" />
                        <Setter
                            Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBlock
                                        FontStyle="{Binding ValueFontStyle}"
                                        FontWeight="{Binding ValueFontWeight}"
                                        Foreground="{Binding ValueBrush}"
                                        Text="{Binding DisplayedValue}"
                                        ToolTip="{Binding Path=DisplayedValue, Converter={StaticResource StringToNotEmptyConverter}}"
                                        VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </DataTemplate>
        <!-- Шаблон ячейки единицы измерения параметра -->
        <DataTemplate
            x:Key="unitCellDataTemplate">
            <ContentControl>
                <ContentControl.Style>
                    <Style
                        TargetType="{x:Type ContentControl}">
                        <Setter
                            Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBlock
                                        FontStyle="{Binding ValueFontStyle}"
                                        FontWeight="{Binding ValueFontWeight}"
                                        Foreground="{Binding ValueBrush}"
                                        Text="{Binding Unit}"
                                        ToolTip="{Binding Path=Unit, Converter={StaticResource StringToNotEmptyConverter}}"
                                        VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </DataTemplate>
        <!-- Стиль редактируемого комбобокса -->
        <Style
            x:Key="EditingComboBoxStyle"
            TargetType="{x:Type ComboBox}">
            <EventSetter
                Event="Loaded"
                Handler="ComboBox_Loaded" />
            <EventSetter
                Event="Unloaded"
                Handler="ComboBox_Unloaded" />
        </Style>
        <!-- Стиль редактируемого текстового поля -->
        <Style
            x:Key="EditingTextBoxStyle"
            TargetType="{x:Type TextBox}">
            <EventSetter
                Event="GotFocus"
                Handler="EditingTextBox_GotFocus" />
        </Style>
        <!-- Шаблон ячейки редактирования значения параметра -->
        <DataTemplate
            x:Key="valueEditCellDataTemplate">
            <ContentControl
                Content="{Binding}">
                <ContentControl.Style>
                    <Style
                        TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding ValueEditor}"
                                Value="CheckBox">
                                <Setter
                                    Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ComboBox
                                                x:Name="comboBox"
                                                DisplayMemberPath="Item1"
                                                ItemsSource="{Binding Source={x:Reference parameterGrid}, Path=TrueFalseList}"
                                                SelectedValue="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                SelectedValuePath="Item2"
                                                Style="{StaticResource EditingComboBoxStyle}" />
                                            <DataTemplate.Triggers>
                                                <Trigger
                                                    SourceName="comboBox"
                                                    Property="IsVisible"
                                                    Value="True">
                                                    <Setter
                                                        TargetName="comboBox"
                                                        Property="FocusManager.FocusedElement"
                                                        Value="{Binding ElementName=comboBox}" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding ValueEditor}"
                                Value="ComboBox">
                                <Setter
                                    Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ComboBox
                                                x:Name="comboBox"
                                                DisplayMemberPath="Item2"
                                                ItemsSource="{Binding PredefinedValues}"
                                                SelectedValue="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                SelectedValuePath="Item1"
                                                Style="{StaticResource EditingComboBoxStyle}" />
                                            <DataTemplate.Triggers>
                                                <Trigger
                                                    SourceName="comboBox"
                                                    Property="IsVisible"
                                                    Value="True">
                                                    <Setter
                                                        TargetName="comboBox"
                                                        Property="FocusManager.FocusedElement"
                                                        Value="{Binding ElementName=comboBox}" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding ValueEditor}"
                                Value="DatePicker">
                                <Setter
                                    Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <DatePicker
                                                x:Name="datePicker"
                                                SelectedDate="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                            <DataTemplate.Triggers>
                                                <Trigger
                                                    SourceName="datePicker"
                                                    Property="IsVisible"
                                                    Value="True">
                                                    <Setter
                                                        TargetName="datePicker"
                                                        Property="FocusManager.FocusedElement"
                                                        Value="{Binding ElementName=datePicker}" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding ValueEditor}"
                                Value="None">
                                <Setter
                                    Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock
                                                FontStyle="{Binding ValueFontStyle}"
                                                FontWeight="{Binding ValueFontWeight}"
                                                Foreground="{Binding ValueBrush}"
                                                Text="{Binding DisplayedValue}"
                                                ToolTip="{Binding Path=DisplayedValue, Converter={StaticResource StringToNotEmptyConverter}}"
                                                VerticalAlignment="Center" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding ValueEditor}"
                                Value="TextBox">
                                <Setter
                                    Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBox
                                                x:Name="textBox"
                                                IsUndoEnabled="False"
                                                Style="{StaticResource EditingTextBoxStyle}"
                                                Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                            <DataTemplate.Triggers>
                                                <Trigger
                                                    SourceName="textBox"
                                                    Property="IsVisible"
                                                    Value="True">
                                                    <Setter
                                                        TargetName="textBox"
                                                        Property="FocusManager.FocusedElement"
                                                        Value="{Binding ElementName=textBox}" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding ValueEditor}"
                                Value="YearPicker">
                                <Setter
                                    Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ComboBox
                                                x:Name="comboBox"
                                                IsEditable="True"
                                                ItemsSource="{Binding Source={x:Reference parameterGrid}, Path=Years}"
                                                Style="{StaticResource EditingComboBoxStyle}"
                                                Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                            <DataTemplate.Triggers>
                                                <Trigger
                                                    SourceName="comboBox"
                                                    Property="IsVisible"
                                                    Value="True">
                                                    <Setter
                                                        TargetName="comboBox"
                                                        Property="FocusManager.FocusedElement"
                                                        Value="{Binding ElementName=comboBox}" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </DataTemplate>
        <!-- Шаблон вложенной сетки параметров -->
        <DataTemplate
            x:Key="innerDataGridDataTemplate">
            <DataGrid
                BorderThickness="0"
                HeadersVisibility="None"
                HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding Children}"
                RowDetailsTemplate="{DynamicResource innerDataGridDataTemplate}"
                CellEditEnding="DataGrid_CellEditEnding"
                SelectedCellsChanged="DataGrid_SelectedCellsChanged">
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        CellTemplate="{StaticResource headerCellDataTemplate}"
                        Header="Параметр"
                        IsReadOnly="True"
                        Width="{Binding Source={x:Reference textBlockHeaderColumn}, Path=DataContext.HeaderColumnWidth, Converter={StaticResource DoubleToDataGridLengthConverter}}" />
                    <DataGridTemplateColumn
                        CellEditingTemplate="{StaticResource valueEditCellDataTemplate}"
                        CellTemplate="{StaticResource valueCellDataTemplate}"
                        Header="Значение"
                        Width="{Binding Source={x:Reference textBlockValueColumn}, Path=DataContext.ValueColumnWidth, Converter={StaticResource DoubleToDataGridLengthConverter}}" />
                    <DataGridTemplateColumn
                        CellTemplate="{StaticResource unitCellDataTemplate}"
                        Header="ЕИ"
                        IsReadOnly="True"
                        Width="*" />
                </DataGrid.Columns>
            </DataGrid>
        </DataTemplate>
        <!-- Стиль сетки параметров -->
        <Style
            TargetType="{x:Type DataGrid}">
            <Setter
                Property="AutoGenerateColumns"
                Value="False" />
            <Setter
                Property="CanUserReorderColumns"
                Value="False" />
            <Setter
                Property="GridLinesVisibility"
                Value="None" />
            <Setter
                Property="SelectionMode"
                Value="Single" />
            <Setter
                Property="SelectionUnit"
                Value="Cell" />
        </Style>
        <!-- Стиль ячейки сетки параметров -->
        <Style
            TargetType="{x:Type DataGridCell}">
            <Style.Setters>
                <EventSetter
                    Event="PreviewMouseLeftButtonDown"
                    Handler="DataGridCell_PreviewMouseLeftButtonDown" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger
                    Property="IsKeyboardFocusWithin"
                    Value="True">
                    <Setter
                        Property="BorderBrush"
                        Value="{x:Null}" />
                </Trigger>
                <Trigger
                    Property="IsSelected"
                    Value="True">
                    <Setter
                        Property="Background"
                        Value="Transparent" />
                    <Setter
                        Property="BorderBrush"
                        Value="{x:Null}" />
                    <Setter
                        Property="Foreground"
                        Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Стиль строки сетки параметров -->
        <Style
            TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding IsVisible}"
                    Value="False">
                    <Setter
                        Property="Visibility"
                        Value="Collapsed" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding IsFilteredOut}"
                    Value="True">
                    <Setter
                        Property="Visibility"
                        Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid
        DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>
        <!-- Текстовый блок для привязки ширин столбцов заголовков параметров -->
        <TextBlock
            x:Name="textBlockHeaderColumn"
            Visibility="Collapsed" />
        <!-- Текстовый блок для привязки ширин столбцов значений параметров -->
        <TextBlock
            x:Name="textBlockValueColumn"
            Visibility="Collapsed" />
        <!-- Панель заголовка сетки параметров -->
        <StackPanel
            Orientation="Horizontal">
            <TextBlock
                FontWeight="Bold"
                Text="{Binding Title}" />
            <TextBlock
                FontWeight="Bold"
                Text=":" />
        </StackPanel>
        <Grid
            Grid.Row="1"
            Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                FontStyle="Italic"
                Text="Поиск:"
                VerticalAlignment="Center" />
            <TextBox
                Grid.Column="1"
                Margin="5,0,0,0"
                Text="{Binding Path=Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Button
                Grid.Column="2"
                IsEnabled="{Binding CanClearFilter}"
                Margin="5,0,0,0"
                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                ToolTip="Очистить фильтр"
                Click="Button_Click">
                <Image
                    Height="16"
                    Source="Images/Clear.png"
                    Style="{StaticResource GrayableImage}"
                    Width="16" />
            </Button>
        </Grid>
        <!-- Сетка параметров -->
        <DataGrid
            Background="{x:Static SystemColors.WindowBrush}"
            CanUserSortColumns="True"
            Grid.Row="2"
            HeadersVisibility="Column"
            HorizontalScrollBarVisibility="Disabled"
            ItemsSource="{Binding Parameters}"
            Margin="0,5,0,0"
            RowDetailsTemplate="{StaticResource innerDataGridDataTemplate}"
            ScrollViewer.CanContentScroll="False"
            CellEditEnding="DataGrid_CellEditEnding"
            PreviewMouseWheel="DataGrid_PreviewMouseWheel"
            SelectedCellsChanged="DataGrid_SelectedCellsChanged">
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    CellTemplate="{StaticResource headerCellDataTemplate}"
                    Header="Параметр"
                    IsReadOnly="True"
                    SortMemberPath="Header"
                    Width="{Binding Source={x:Reference textBlockHeaderColumn}, Path=DataContext.HeaderColumnWidth, Mode=TwoWay, Converter={StaticResource DoubleToDataGridLengthConverter}}" />
                <DataGridTemplateColumn
                    CanUserSort="False"
                    CellEditingTemplate="{StaticResource valueEditCellDataTemplate}"
                    CellTemplate="{StaticResource valueCellDataTemplate}"
                    Header="Значение"
                    Width="{Binding Source={x:Reference textBlockValueColumn}, Path=DataContext.ValueColumnWidth, Mode=TwoWay, Converter={StaticResource DoubleToDataGridLengthConverter}}" />
                <DataGridTemplateColumn
                    CanUserSort="False"
                    CellTemplate="{StaticResource unitCellDataTemplate}"
                    Header="ЕИ"
                    IsReadOnly="True"
                    Width="*" />
            </DataGrid.Columns>
        </DataGrid>
        <!-- Флажок для изменения опции скрытия пустых параметров -->
        <CheckBox
            Grid.Row="3"
            IsChecked="{Binding Path=HideEmpty, Mode=TwoWay}"
            Margin="0,5,0,0">Скрыть параметры с пустыми значениями</CheckBox>
    </Grid>
</UserControl>